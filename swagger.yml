openapi: "3.0.3"
info:
  title: Expense Tracker API
  description: This is the REST API documentation for the Expense Tracker
  version: "1.0"
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://localhost/api/
    description: Localhost
components:
  schemas:
    Expense:
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          readOnly: true
          description: Expense id
        recipient:
          type: string
          description: Expense recipient
        description:
          type: string
          description: Expense description
        category:
          type: string
          description: Expense category
        amount:
          type: number
          format: float
          description: Expense amount
        date:
          type: string
          format: date
          description: Expense date

  parameters:
    id:
      name: id
      in: path
      description: ID of the resource
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
    description:
      name: description
      in: query
      description: Filter by description (contains/keyword)
      required: false
      schema:
        type: string
    offset:
      name: offset
      in: query
      description: Offset the results
      required: false
      schema:
        type: integer
        default: 0
    limit:
      name: limit
      in: query
      description: Limit the number of results
      required: false
      schema:
        type: integer
        default: 20
        minimum: 5
        maximum: 100
    sort:
      name: sort
      in: query
      description: Sort by field
      required: false
      schema:
        type: string
    order:
      name: order
      in: query
      description: Sort order (asc/desc)
      required: false
      schema:
        type: string
        enum: [asc, desc]
    amountFrom:
      name: amountFrom
      in: query
      description: Filter by amount from
      required: false
      schema:
        type: number
        format: float
    amountTo:
      name: amountTo
      in: query
      description: Filter by amount to
      required: false
      schema:
        type: number
        format: float
    dateFrom:
      name: dateFrom
      in: query
      description: Filter by date from
      required: false
      schema:
        type: string
        format: date
    dateTo:
      name: dateTo
      in: query
      description: Filter by date to
      required: false
      schema:
        type: string
        format: date
    category:
      name: category
      in: query
      description: Filter by category
      required: false
      schema:
        type: integer
    recipient:
      name: recipient
      in: query
      description: Filter by recipient (contains/keyword)
      required: false
      schema:
        type: string

paths:
  /expenses:
    get:
      summary: Get all expenses
      description: Gets all expenses from the database with provided filters
      responses:
        "200":
          description: Request successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Expense"
        "400":
          description: Invalid parameter.
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No expenses found (empty database).
        "5XX":
          description: Unexpected error.
      tags:
        - Expenses
      parameters:
        - $ref: "#/components/parameters/category"
        - $ref: "#/components/parameters/recipient"
        - $ref: "#/components/parameters/description"

        - $ref: "#/components/parameters/amountFrom"
        - $ref: "#/components/parameters/amountTo"
        - $ref: "#/components/parameters/dateFrom"
        - $ref: "#/components/parameters/dateTo"

        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/order"
    post:
      summary: Create a new expense
      description: Creates a new expense in the database with provided data
      responses:
        "200":
          description: List of expenses
          links:
            Expense:
              operationId: getExpenseById
              parameters:
                id: "$response.body#/id"
        "400":
          description: Invalid parameter.
        "401":
          description: Authorization information is missing or invalid.
        "5XX":
          description: Unexpected error.
      tags:
        - Expenses
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Expense"
    put:
      summary: Update an expense
      description: Updates an expense in the database with provided data
      operationId: updateExpense
      responses:
        "200":
          description: Request successful
        "400":
          description: Invalid parameter.
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Expense not found.
        "5XX":
          description: Unexpected error.
      tags:
        - Expenses
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Expense"

  /expenses/last/{period}:
    get:
      summary: Get last expenses by period
      description: Gets last expenses from the database by period
      operationId: getLastExpenses
      parameters:
        - name: period
          in: path
          description: >
            Period of time. Examples: <br />
            - 1 day <br />
            - 3 days <br />
            - x week(s) <br />
            - x month(s) <br />
            - x year(s) <br />
            - january <br />
            - 2019-febuary <br />
            - 2019-march <br />
            - 2019 <br />
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Request successful
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Expense"
        "400":
          description: Invalid parameter. Usually means that period is not one of the allowed values.
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No expenses found (empty database).
        "5XX":
          description: Unexpected error.
      tags:
        - Expenses

  /expenses/generate:
    post:
      summary: Create random expense (for testing purposes)
      description: Generates random expenses in the database
      operationId: generateExpenses
      parameters:
        - name: count
          in: query
          description: Number of expenses to generate
          required: false
          schema:
            type: integer
            default: 100
            minimum: 1
            maximum: 1000
      responses:
        "200":
          description: Request successful
        "400":
          description: Invalid parameter.
        "401":
          description: Authorization information is missing or invalid.
        "5XX":
          description: Unexpected error.
      tags:
        - Expenses

  /expenses/{id}:
    get:
      summary: Get an expense by id
      description: Gets an expense from the database by id
      operationId: getExpenseById
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Request successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Expense"
        "400":
          description: Invalid parameter.
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Expense not found.
        "5XX":
          description: Unexpected error.
      tags:
        - Expenses
    delete:
      summary: Delete an expense by id
      description: Deletes an expense from the database by id
      operationId: deleteExpense
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Request successful
        "400":
          description: Invalid parameter.
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Expense not found.
        "5XX":
          description: Unexpected error.
      tags:
        - Expenses
